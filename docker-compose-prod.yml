version: '3'

services:
  reverse-proxy:
    container_name: wild-and-without-proxy
    image: traefik:v2.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=aydin@hotmail.co.uk"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/acme.json:/letsencrypt/acme.json
    labels:
      traefik.enable: true
      traefik.http.routers.http_catchall.rule: HostRegexp(`{any:.+}`)
      traefik.http.routers.http_catchall.entrypoints: web
      traefik.http.routers.http_catchall.middlewares: https_redirect
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: https
      traefik.http.middlewares.https_redirect.redirectscheme.permanent: true

  varnish:
    container_name: wild-and-without-varnish
    build:
      context: .docker/files/wild-and-without-varnish-prod
      dockerfile: Dockerfile
    restart: always
    environment:
      VARNISH_PURGE_KEY: "${VARNISH_PURGE_KEY}"
    logging:
      options:
        max-size: 10m
    ports:
      - "127.0.0.1:90:80"
    labels:
      traefik.enable: true
      traefik.http.middlewares.nonwww-redirect.redirectregex.regex: ^https://wildandwithout.com/(.*)
      traefik.http.middlewares.nonwww-redirect.redirectregex.replacement: https://www.wildandwithout.com/$${1}
      traefik.http.middlewares.nonwww-redirect.redirectregex.permanent: true
      traefik.http.routers.varnish-websecure.rule: Host(`www.wildandwithout.com`, `wildandwithout.com`)
      traefik.http.routers.varnish-websecure.middlewares: nonwww-redirect
      traefik.http.routers.varnish-websecure.entrypoints: websecure
      traefik.http.routers.varnish-websecure.tls.certresolver: myresolver

  redis:
    container_name: wild-and-without-redis
    image: redis:alpine
    ports:
      - "6379:6379"

  dockerhost:
    container_name: wild-and-without-host
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: always
